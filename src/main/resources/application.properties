server.port=${PORT:8080}


spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:32768/kpi_events}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:root}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#port : 5432 password :root
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.registration.google.client-id=499008511341-n4i7dimprc4pdq6je2qi5bsoiopc1jvo.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=kYRuXNRwe5Y_a12IqAAwqIm7
spring.security.oauth2.client.registration.google.redirect-uri-template=http://localhost:8080/google-login
spring.security.oauth2.client.registration.google.scope=profile email

spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB

features.events.common=true
features.events.miss=true
features.university=true
features.students=true

amazonProperties.bucketName=${AMAZON_BUCKET:events--core-images}
amazonProperties.endpointUrl=${AMAZON_ENDPOINT:https://s3.eu-west-3.amazonaws.com}
amazonProperties.secretKey=${AMAZON_SECRET_KEY}
amazonProperties.accessKey=${AMAZON_ACCESS_KEY}

